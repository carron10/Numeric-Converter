/*This program is used to convert number from any base to any base
There is little to know if u want to understand the codes here....


*/



package numric.converter;

import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.JPopupMenu;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.undo.UndoManager;

/**
 *
 * @author Muleya
 */
@SuppressWarnings("serial")
public final class numeric extends javax.swing.JFrame {

    /**
     * Creates new form numeric
     */
    public numeric() {
        initComponents();

        set_zero();
        do_actions(dec);
        do_actions(octal);
        do_actions(hex);
        do_actions(any_base);
        do_actions(binary);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dec = new javax.swing.JTextField();
        hex = new javax.swing.JTextField();
        octal = new javax.swing.JTextField();
        binary = new javax.swing.JTextField();
        spinner = new javax.swing.JSpinner();
        any_base = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Number Converter");
        setLocationByPlatform(true);
        setResizable(false);
      

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "convert", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 153, 153))); // NOI18N

        jLabel1.setText("Decimal:");

        jLabel2.setText("Hex:");

        jLabel3.setText("Octal:");

        jLabel4.setText("Binary:");

        jLabel5.setText("Base:");
        
        dec.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 255, 0), new java.awt.Color(102, 255, 51), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        dec.addActionListener(this::decActionPerformed);
        dec.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                decKeyReleased(evt);
            }
        });

        hex.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 255, 0), new java.awt.Color(102, 255, 51), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        hex.addActionListener(this::hexActionPerformed);
        hex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hexKeyReleased(evt);
            }
        });

        octal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 255, 0), new java.awt.Color(102, 255, 51), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        octal.addActionListener(this::octalActionPerformed);
        octal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                octalKeyReleased(evt);
            }
        });

        binary.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 255, 0), new java.awt.Color(102, 255, 51), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        binary.addActionListener(this::binaryActionPerformed);
        binary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                binaryKeyReleased(evt);
            }
        });

        spinner.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 255, 0), new java.awt.Color(102, 255, 51), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        spinner.setInheritsPopupMenu(true);
        spinner.setOpaque(false);
        spinner.addChangeListener(this::spinnerStateChanged);

        any_base.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 255, 0), new java.awt.Color(102, 255, 51), new java.awt.Color(51, 255, 0), new java.awt.Color(51, 255, 0)));
        any_base.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                any_baseKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(any_base, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                    .addComponent(dec, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hex)
                    .addComponent(octal)
                    .addComponent(binary)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(octal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(binary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(any_base, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("Exit");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");
        jMenu2.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu2MenuSelected(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("More");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//to change if enter is pressed--- in the 'dec' field
    private void decActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decActionPerformed
        if(!dec.getText().isEmpty()){
             try{
                     change(Long.parseLong(dec.getText()));
                 }catch(NumberFormatException e){
                     dec.setText("0");
                 }
             }else{
            set_zero();
         }      
    }//GEN-LAST:event_decActionPerformed
//to change if a user increases value--- in the 'spinner'__
    private void spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerStateChanged
         
        if((int)spinner.getValue()<=2){
            spinner.setValue(2);
         }
         if(!dec.getText().isEmpty()){
                 change(Long.parseLong(dec.getText()));
           }else{
               set_zero();
         }
    }//GEN-LAST:event_spinnerStateChanged
//to change if any key is pressed--- in the 'dec' field
    private void decKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_decKeyReleased
            to_ten(dec.getText(),10, (JTextField) evt.getSource());
    }//GEN-LAST:event_decKeyReleased
//to change if a user pressed enter--- in the 'binary' field
    private void binaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binaryActionPerformed
        // TODO add your handling code here:  
        to_ten(binary.getText(),2,(JTextField) evt.getSource());
    }//GEN-LAST:event_binaryActionPerformed
//to change if any key is pressed--- in the 'binary' field
    private void binaryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_binaryKeyReleased
        // TODO add your handling code here:
        to_ten(binary.getText(),2,(JTextField) evt.getSource());
    }//GEN-LAST:event_binaryKeyReleased
//to change if a user pressed enter--- in the 'octal' field
    private void octalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_octalActionPerformed
        to_ten(octal.getText(),8,(JTextField) evt.getSource());
    }//GEN-LAST:event_octalActionPerformed
//to change if any key is pressed--- in the 'octal' field
    private void octalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_octalKeyReleased
        to_ten(octal.getText(),8, (JTextField) evt.getSource());
    }//GEN-LAST:event_octalKeyReleased
 //to change if a user presses enter-- in the 'hex' field
    private void hexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexActionPerformed
        to_ten(hex.getText(),16, (JTextField) evt.getSource());
    }//GEN-LAST:event_hexActionPerformed
  //to change if any key is pressed--- in the 'hex' field
    private void hexKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hexKeyReleased
        to_ten(hex.getText(),16, (JTextField) evt.getSource());
    }//GEN-LAST:event_hexKeyReleased

    private void any_baseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_any_baseKeyReleased
        to_ten(any_base.getText(), (int) spinner.getValue(), (JTextField) evt.getSource());
    }//GEN-LAST:event_any_baseKeyReleased
   //for exit
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed
 //to display the designer name
    private void jMenu2MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu2MenuSelected
        // TODO add your handling code here:
       int a=JOptionPane.showConfirmDialog(rootPane,"Designed By:\nCarron", "About",OK_CANCEL_OPTION, INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu2MenuSelected
    
   //This  function is to change any number to base ten... first of all the number needs to be checked if it is valid...
    void to_ten(String num ,int nn,JTextField evt){
        int n=0,k =0;
        long num_10=0;
       if(check_validation(num,nn)==true){
           for(int i=num.length()-1;i>=0;i--){
            k=0;
            try{
             if(Integer.parseInt(String.valueOf(num.charAt(i)))<10){
               k=Integer.parseInt(String.valueOf(num.charAt(i)));
            }
            }catch(NumberFormatException ei){
                n=9;
                for(char ii='a';ii<='z';ii++){
                    n+=1;
                   if(String.valueOf(num.charAt(i)).toUpperCase().equals(String.valueOf(ii).toUpperCase())){
                       k=n;
                       //System.out.println(n);
                    }
                }
               
            }
            num_10+=(Math.pow(nn,(num.length()-1)-i))*k;
           
        }
           change(num_10);
       }else{
            try{
                 evt.setText(dec.getText().substring(0, dec.getText().length()-1));
            }catch(StringIndexOutOfBoundsException eii){
                 evt.setText("0");
            }
            to_ten(evt.getText(),nn, evt);
       }
         
   }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(numeric.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(numeric.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(numeric.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(numeric.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new numeric().setVisible(true);
        });
    }
    
    //if an error ocurs this functions used to set each and every field to zero
    void set_zero(){
        dec.setText("0");
        hex.setText("0");
        binary.setText("0");
       octal.setText("0");
       any_base.setText("0");
       spinner.setValue(2);
    }
    
    //This method is used to change a number from base 10 to a specific base.. for example the second line in this method
    // which start with 'hex' is used to change the number 'n' to base 16 .. and the number is displayed in the hex field..
    void change(long n){
        dec.setText(Integer.toString((int) n, 10).toUpperCase());
         hex.setText(Integer.toString((int) n, 16).toUpperCase());
          binary.setText(Integer.toString((int) n, 2).toUpperCase());
           octal.setText(Integer.toString((int) n, 8).toUpperCase());
            any_base.setText(Integer.toString((int) n, (int) spinner.getValue()).toUpperCase());
            
            repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField any_base;
    private javax.swing.JTextField binary;
    private javax.swing.JTextField dec;
    private javax.swing.JTextField hex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField octal;
    private javax.swing.JSpinner spinner;
    // End of variables declaration//GEN-END:variables
     
    
    //Function below is for popup:: it is the one used to for popup like which contains 'copy' , 'cut' and paste.
    void do_actions(JTextField fld){
         JPopupMenu popup=new JPopupMenu();
         UndoManager undomanager=new UndoManager();
         fld.getDocument().addUndoableEditListener(undomanager);
         Action undoaction=new AbstractAction("Undo") {
             private static final long serialVersionUID = 1L;
             @Override
             public void actionPerformed(ActionEvent e) {
                 if(undomanager.canUndo()){
                     undomanager.undo();
                 }
             }
         };
          Action  copy=new AbstractAction("Copy") {
             private static final long serialVersionUID = 1L;
             @Override
             public void actionPerformed(ActionEvent e) {
                 fld.copy();
             }
         };
           Action paste=new AbstractAction("Paste") {
             private static final long serialVersionUID = 1L;
             @Override
             public void actionPerformed(ActionEvent e) {
                 fld.paste();
             }
         };
            Action cut=new AbstractAction("Cut") {
             private static final long serialVersionUID = 1L;
             @Override
             public void actionPerformed(ActionEvent e) {
                 fld.cut();
             }
         };
             Action select_all=new AbstractAction("Select All") {
             private static final long serialVersionUID = 1L;
             @Override
             public void actionPerformed(ActionEvent e) {
                   fld.selectAll();
             }
         };
             
             cut.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke("Control X"));
             copy.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke("Control C"));
             paste.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke("Control Y"));
             select_all.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke("Control A"));
             popup.add(undoaction);
             popup.addSeparator();
             popup.add(cut);
             popup.add(copy);
             popup.add(paste);
             popup.addSeparator();
             popup.add(select_all);
            fld.setComponentPopupMenu(popup);
            ImageIcon n=new ImageIcon("chatsfly\\numeric_converter.png");
            this.setIconImage(n.getImage());
     }  
        
       //The method below is used to check if the number entered is in correct base for example.. an number in base 8 has only digit less than 8.. e.g 1234 
     //can be in base 8 but 897 cant because it contains 8 and 9 which are not lesss than 8.
     //So this function is to check if  a number is correct.
    static boolean check_validation(String str,int base){
        int nums[]=new int[str.length()],k=0,n=9;
        for(int i=0;i<str.length();i++){
            k=0;
            try{
             if(Integer.parseInt(String.valueOf(str.charAt(i)))<10){
                 k=Integer.parseInt(String.valueOf(str.charAt(i)));
              }
            }catch(NumberFormatException ei){
                for(char j='a';j<='z';j++){
                 n+=1;
                   if(String.valueOf(str.charAt(i)).toUpperCase().equals(String.valueOf(j).toUpperCase())){
                       k=n;
                    }
                }
                n=0;
               
            }
            nums[i]=k;
        }
        
        for(int i=0;i<nums.length;i++){
            if(nums[i]>=base){
                return false;
            }
        }
          return true;
    }
}
